//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PhyexpComponent phyexp { get { return (PhyexpComponent)GetComponent(GameComponentsLookup.Phyexp); } }
    public bool hasPhyexp { get { return HasComponent(GameComponentsLookup.Phyexp); } }

    public void AddPhyexp(double newPhyexp) {
        var index = GameComponentsLookup.Phyexp;
        var component = (PhyexpComponent)CreateComponent(index, typeof(PhyexpComponent));
        component.phyexp = newPhyexp;
        AddComponent(index, component);
    }

    public void ReplacePhyexp(double newPhyexp) {
        var index = GameComponentsLookup.Phyexp;
        var component = (PhyexpComponent)CreateComponent(index, typeof(PhyexpComponent));
        component.phyexp = newPhyexp;
        ReplaceComponent(index, component);
    }

    public void RemovePhyexp() {
        RemoveComponent(GameComponentsLookup.Phyexp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhyexp;

    public static Entitas.IMatcher<GameEntity> Phyexp {
        get {
            if (_matcherPhyexp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Phyexp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhyexp = matcher;
            }

            return _matcherPhyexp;
        }
    }
}
