//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PhylevelComponent phylevel { get { return (PhylevelComponent)GetComponent(GameComponentsLookup.Phylevel); } }
    public bool hasPhylevel { get { return HasComponent(GameComponentsLookup.Phylevel); } }

    public void AddPhylevel(int newPhylevel) {
        var index = GameComponentsLookup.Phylevel;
        var component = (PhylevelComponent)CreateComponent(index, typeof(PhylevelComponent));
        component.phylevel = newPhylevel;
        AddComponent(index, component);
    }

    public void ReplacePhylevel(int newPhylevel) {
        var index = GameComponentsLookup.Phylevel;
        var component = (PhylevelComponent)CreateComponent(index, typeof(PhylevelComponent));
        component.phylevel = newPhylevel;
        ReplaceComponent(index, component);
    }

    public void RemovePhylevel() {
        RemoveComponent(GameComponentsLookup.Phylevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhylevel;

    public static Entitas.IMatcher<GameEntity> Phylevel {
        get {
            if (_matcherPhylevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Phylevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhylevel = matcher;
            }

            return _matcherPhylevel;
        }
    }
}
